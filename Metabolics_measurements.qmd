---
title: "Metabolic measurements"
author: "Sofie Sonner and Kirt Onthank"
format: html
---

```{r, warning=F}
library(remotes)
```

```{r, eval=FALSE}
#install_github("KirtOnthank/OTools")
```

```{r, warning=F}
library(OTools)
```

```{r, warning=F}
trim.begin=45
trim.end=15
```

```{r, warning=F}
resp=data.frame(matrix(nrow=17,ncol=13))
colnames(resp)=c("octo","on1","on1.o2","on1.temp","off1","off1.o2","off1.temp","on2","on2.o2","on2.temp","off2","off2.o2","off2.temp")
```


```{r}
file.info=read.csv("metab_file_info.csv")
file.dir="metabolic_raw_data"
```


# calculating skin metabolic rates
```{r}

for (k in 1:nrow(file.info)){

  octo01=read.pyro(paste(file.dir,file.info$metab_file[k],sep="/"))
  octo01.temp=read.csv(paste(file.dir,file.info$temp_file[k],sep="/"))
  octo01.temp$times=octo01.temp$millis/1000

  ## Smoothing temperature at different time offsets

  octo01=cbind(octo01[,1:28],matrix(nrow=nrow(octo01),ncol=26))
  colnames(octo01)=c(colnames(octo01)[1:28],"tempv6","tempv5","tempv4","tempv3","tempv2","tempv1",
                     "temp.0","temp.1","temp.2","temp.3","temp.4","temp.5","temp.6","tempv6_filt",
                     "tempv5_filt","tempv4_filt","tempv3_filt","tempv2_filt","tempv1_filt","temp.0_filt",
                     "temp.1_filt","temp.2_filt","temp.3_filt","temp.4_filt","temp.5_filt","temp.6_filt")


  for (j in -6:6){
    for (i in 1:nrow(octo01)){
      octo01[i,35+j]=mean(octo01.temp$temp[which.min(abs(octo01.temp$times-octo01$times[i]+j))])
    }
  }


  smooth=10
  coeff=dnorm(seq(from=-3,to=3,length.out=smooth+1))/sum(dnorm(seq(from=-3,to=3,length.out=smooth+1)))

  for (i in -6:6){
    octo01[,48+i]=stats::filter(octo01[,35+i],coeff)  
  }


  ## Choosing correct time offset

  par(mfrow=c(4,4))
  par(mar=c(1,1,1,1))
  for (i in -6:6){
    plot(octo01$O21/((3.223674e-06*octo01[,48+i]^3.686095+8.338341e-01)^2)~octo01$times,type="l",ylab="",xlab="",main=i,axes=F)
  }

  # Select the minimum offset that gives substantial improvement. Then put it into the "temp.off" parameter below.

  ## Correcting for temperature using correct time offset


  time.off=file.info$time_off[k]
  octo01$O21adj=octo01$O21/((3.223674e-06*octo01[,48+time.off]^3.686095+8.338341e-01)^2)

  ## Correcting for light

  par(mfrow=c(3,3))
  par(mar=c(1,1,1,1))

  for (i in seq(from=0.92,to=1,by=.01)){
    temp=octo01$O21adj
    temp[octo01$ambient1>20]=temp[octo01$ambient1>20]/i
    plot(temp[octo01$ambient1<20]~octo01$times[octo01$ambient1<20],pch=".",axes=F,main=i,col="red",ylim=range(temp,na.rm = T))
    points(temp[octo01$ambient1>20]~octo01$times[octo01$ambient1>20],pch=".",col="blue")
    box()
  }

  # Choose the offset that best aligns the ends of the blue dots to the red dots.
  
  ## Applying light correction

  light.off=file.info$light_off[k]
  octo01$O21adj2=octo01$O21adj
  octo01$O21adj2[octo01$ambient1>20]=octo01$O21adj2[octo01$ambient1>20]/light.off
  
  par(mfrow=c(1,1))
  plot(O21~times,data=octo01,type="l")
  lines(O21adj2~times,data=octo01,col="red")
  abline(v=c(60,360,660,960)+trim.begin,col="blue")
  abline(v=c(360,660,960,1200)-trim.end,col="blue")

  ## Defining the start and stop of respiration measurement

  breaks=c(min(which(octo01$times>60+trim.begin)),
           min(which(octo01$times>360-trim.end)),
           min(which(octo01$times>360+trim.begin)),
           min(which(octo01$times>660-trim.end)),
           min(which(octo01$times>660-trim.begin)),
           min(which(octo01$times>960-trim.end)),
           min(which(octo01$times>960-trim.begin)),
           min(which(octo01$times>1200-trim.end)))

  octo01.10=
  (octo01$O21adj2[breaks[1]:breaks[2]-5]-
    octo01$O21adj2[breaks[1]:breaks[2]+5])*
    (3600/2)*
    0.000612

  mean(octo01.10*1000)
  #  mean(octo01.1*1000)

  ## Calculating Respiration rates and filling dataset

  resp$octo[1]=1

  octo01.1=
  coef(lm(O21adj2~times,data=octo01[octo01$times>=60+trim.begin&octo01$times<=360-trim.end,]))[2]*-1*
#  (octo01$O21adj2[breaks[1]:breaks[2]]-
#    octo01$O21adj2[breaks[1]:breaks[2]+1])*
#    (3600/2)*
    3600*
    0.000612 #volume of respirometer in liters (it is 612 microliters)

  resp$on1[k]=mean(octo01.1)*1000
  resp$on1.o2[k]=mean(octo01$O21adj2[breaks[1]:breaks[2]])
  resp$on1.temp[k]=mean(octo01$tempv5_filt[breaks[1]:breaks[2]])

  octo01.2=
  coef(lm(O21adj2~times,data=octo01[octo01$times>=360+trim.begin&octo01$times<=660-trim.end,]))[2]*-1*
#  (octo01$O21adj2[breaks[3]:breaks[4]]-
#    octo01$O21adj2[breaks[3]:breaks[4]+1])*
#    (3600/2)*
    3600*
    0.000612 #volume of respirometer in liters (it is 612 microliters)

  resp$off1[k]=mean(octo01.2)*1000
  resp$off1.o2[k]=mean(octo01$O21adj2[breaks[3]:breaks[4]])
  resp$off1.temp[k]=mean(octo01$tempv5_filt[breaks[3]:breaks[4]])

  octo01.3=
  coef(lm(O21adj2~times,data=octo01[octo01$times>=660+trim.begin&octo01$times<=960-trim.end,]))[2]*-1*
#  (octo01$O21adj2[breaks[5]:breaks[6]]-
#    octo01$O21adj2[breaks[5]:breaks[6]+1])*
#    (3600/2)*
    3600*
    0.000612 #volume of respirometer in liters (it is 612 microliters)

  resp$on2[k]=mean(octo01.3)*1000
  resp$on2.o2[k]=mean(octo01$O21adj2[breaks[5]:breaks[6]])
  resp$on2.temp[k]=mean(octo01$tempv5_filt[breaks[5]:breaks[6]])

  octo01.4=
  coef(lm(O21adj2~times,data=octo01[octo01$times>=960+trim.begin&octo01$times<=1200-trim.end,]))[2]*-1*
#  (octo01$O21adj2[breaks[7]:breaks[8]]-
#    octo01$O21adj2[breaks[7]:breaks[8]+1])*
#    (3600/2)*
    3600*
    0.000612 #volume of respirometer in liters (it is 612 microliters)

  resp$off2[k]=mean(octo01.4)*1000
  resp$off2.o2[k]=mean(octo01$O21adj2[breaks[7]:breaks[8]])
  resp$off2.temp[k]=mean(octo01$tempv5_filt[breaks[7]:breaks[8]])

}
```



## Adding Octopus mass to dataset
```{r, warning=F}
resp$lognumber=c(1,2,4,5,6,7,9,10,11,13,14,15,16,23,24,25,26)
resp$mass=c(136,153,59,85,155,46,41,188,152,218,85,390,189,NA,155.5,26.5,308)
resp$octo=1:17
```



```{r, warning=F}
write.csv(resp,"skin_resp.csv",row.names = F)
```





